{"version":3,"sources":["components/landigPage.jsx","actions/index.js","components/Card.jsx","components/Home.jsx","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["landingPage","to","getCharacters","dispatch","a","axios","get","json","type","payload","data","Card","name","image","nickname","src","alt","width","heigh","Home","useDispatch","allCharacters","useSelector","state","characters","useEffect","onClick","e","preventDefault","handleClick","value","map","c","id","App","className","exact","path","component","LandingPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAGe,SAASA,IACpB,OACI,gCACI,qEACA,cAAC,IAAD,CAAMC,GAAK,QAAX,SACI,mD,sDCHT,SAASC,IACZ,8CAAO,WAAeC,GAAf,eAAAC,EAAA,sEACcC,IAAMC,IAAI,mCAAmC,IAD3D,cACCC,EADD,yBAIIJ,EAAS,CACZK,KAAM,iBACNC,QAASF,EAAKG,QANf,2CAAP,sDCJW,SAASC,EAAT,GAAuC,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,SACvC,OACI,gCACI,6BAAKF,IACL,6BAAKE,IACL,qBAAKC,IAAOF,EAAOG,IAAK,gBAAgBC,MAAM,MAAMC,MAAM,aCAvD,SAASC,IACpB,IAAMhB,EAAWiB,cACXC,EAAgBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,cAUvD,OARAC,qBAAU,WACNtB,EAAUD,OACR,CAACC,IAOH,gCACI,cAAC,IAAD,CAAMF,GAAG,aAAT,8BACA,sDACA,wBAAQyB,QAAS,SAAAC,IARzB,SAAqBA,GACrBA,EAAEC,iBACFzB,EAASD,KAMsB2B,CAAYF,IAAnC,kDACA,mCACI,wBAAQG,MAAQ,MAAhB,wBACA,wBAAQA,MAAQ,OAAhB,4BAEJ,mCACI,wBAAQA,MAAQ,MAAhB,mBACA,wBAAQA,MAAQ,QAAhB,kBACA,wBAAQA,MAAQ,WAAhB,oBACA,wBAAQA,MAAQ,UAAhB,yBACA,wBAAQA,MAAQ,gBAAhB,qCAEJ,mCACI,wBAAQA,MAAQ,MAAhB,mBACA,wBAAQA,MAAQ,UAAhB,qBACA,wBAAQA,MAAQ,MAAhB,0BAlBR,OAoBCT,QApBD,IAoBCA,OApBD,EAoBCA,EAAeU,KAAI,SAACC,GACjB,OACA,mCACI,cAAC,IAAD,CAAM/B,GAAM,SAAW+B,EAAEC,GAAzB,SACA,cAACtB,EAAD,CAAMC,KAAMoB,EAAEpB,KAAMC,MAAOmB,EAAEnB,MAAOC,SAAUkB,EAAElB,UAAekB,EAAEC,cC1B9DC,MAbf,WACE,OACE,cAAC,IAAD,UACA,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACF,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,IAAIC,UAAWC,IACnC,cAAC,IAAD,CAAOF,KAAO,QAAQC,UAAWnB,YCCtBqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gCCPRQ,EAAe,CACjBzB,WAAa,IAcF0B,MAXf,WAAqD,IAA/B3B,EAA8B,uDAAtB0B,EAAcE,EAAQ,uCACpD,MACS,mBADFA,EAAO3C,KAEN,2BACOe,GADP,IAEIC,WAAY2B,EAAO1C,UAGZc,GCPN6B,EAAQC,sBAAYH,EAAaI,8BAAoBC,0BAAgBC,OCIlFC,IAASC,OACT,cAAC,IAAD,CAAUN,MAASA,EAAnB,SACA,cAAC,IAAMO,WAAP,UACI,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.ee5cc6cd.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function landingPage(){\r\n    return(\r\n        <div>\r\n            <h1>Bienvenidos a mi súper página</h1>\r\n            <Link to = '/home'>\r\n                <button>ingresar</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","\r\n//Acciones que necesito crear para empezar a trabajar en componentes del Home \r\nimport axios from 'axios';\r\n\r\n//conxión entre el back y el front\r\nexport function getCharacters(){\r\n    return async function(dispatch) {\r\n        var json = await axios.get('http://localhost:3001/characters',{\r\n}); //me traigo la ruta del back donde me traigo los personajes\r\n\r\n        return dispatch({\r\n            type: 'GET_CHARACTERS', \r\n            payload: json.data,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function Card({name, image, nickname}){\r\n    return(\r\n        <div>\r\n            <h3>{name}</h3>\r\n            <h5>{nickname}</h5>\r\n            <img src = {image} alt= \"img not found\" width=\"200\" heigh=\"250px\"/>\r\n        </div>\r\n    );\r\n}","import {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { getCharacters } from '../actions';\r\nimport {Link} from 'react-router-dom';\r\nimport Card from './Card';\r\n\r\n\r\nexport default function Home (){\r\n    const dispatch = useDispatch();\r\n    const allCharacters = useSelector((state) => state.characters) //con useSelector traeme en esa constante todo lo que esta en el estado de characters\r\n\r\nuseEffect(() =>{\r\n    dispatch (getCharacters());\r\n    },[dispatch]) //está vaacío porque no depende de nada entonces se va a motar tranquilamente\r\n\r\nfunction handleClick(e){\r\ne.preventDefault(); //es preventivo pra que no se me rompa la página cuando se me recarga la página debido a que algo dependía de algo\r\ndispatch(getCharacters()); //me lo resetea, carga todos los personajes, sirve para cualdo se bugea\r\n}\r\nreturn (\r\n    <div>\r\n        <Link to='/character'> Crear personaje</Link>\r\n        <h1>Aguante breaking bad</h1>\r\n        <button onClick={e => {handleClick(e)}}>Volver a cargar todos los personajes</button>\r\n        <select>\r\n            <option value = 'asc'>Ascendente</option>\r\n            <option value = 'desc'>Descendente</option>\r\n        </select>\r\n        <select>\r\n            <option value = 'All'>Todos</option>\r\n            <option value = 'Alive'>Vivo</option>\r\n            <option value = 'Deseased'>Muerte</option>\r\n            <option value = 'Unknown'>Desconocido</option>\r\n            <option value = 'Presumed dead'>Probablemente muerto</option>\r\n        </select>\r\n        <select>\r\n            <option value = 'All'>Todos</option>\r\n            <option value = 'created'>Creados</option>\r\n            <option value = 'api'>Existente</option>\r\n        </select>\r\n    {allCharacters?.map((c) => {\r\n        return(\r\n        <fragment> \r\n            <Link to = {'/home/' + c.id}>\r\n            <Card name={c.name} image={c.image} nickname={c.nickname} key={c.id}/>\r\n            </Link>\r\n        </fragment>\r\n        );\r\n    })}\r\n    </div>\r\n    )\r\n}\r\n\r\n","import './App.css';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport LandingPage from './components/landigPage';\r\nimport Home from './components/Home';\r\n//el Switch solo se mueve solo dentro de lo que están envolviendo, es buena práctica.\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n      <Switch> \r\n    <Route exact path = '/' component={LandingPage}/>\r\n    <Route path = '/home' component={Home}/>\r\n      </Switch>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n    characters : []\r\n}\r\n\r\nfunction rootReducer (state = initialState, action) {\r\nswitch(action.type) {\r\n    case 'GET_CHARACTERS' :\r\n        return{\r\n            ...state,\r\n            characters: action.payload //mandá todo lo que te mande la cción get_characters\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from \"../reducer\";\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './store';\r\n\r\n//siempre envolver su index en un arch provider sino redux no nos entiende\r\nReactDOM.render(\r\n<Provider store = {store}>   \r\n<React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}